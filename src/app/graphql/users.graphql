#-------------------------------------------------------------------------------
fragment localUserFields on User
{	 
	id	
	username
	fullname
	initials		
	holidayStartBalance
	overtimeStartBalance	
}

#-------------------------------------------------------------------------------
query Users
{
	users: allUsers
	{	
		nodes 
		{
			...localUserFields			
		}
	}       
}

#-------------------------------------------------------------------------------
query User($id: Int!)
{
	user: userById(id: $id)
	{
		...localUserFields		
		usersGroups: usersGroupsByUserId
		{
			nodes
			{
				id
				group: groupByGroupId
				{
					...groupFields
				}
			}
		}
	}
}

#-------------------------------------------------------------------------------
mutation UpdateUser($id: Int!, $userPatch: UserPatch!, $groupIds: [Int])
{
	updateUserById(input: {id: $id, userPatch: $userPatch}) 
	{
		user 
		{
			...localUserFields			
			usersGroups: usersGroupsByUserId
			{
				nodes
				{
					id
					group: groupByGroupId
					{
						...groupFields
					}
				}
			}
		}
	}

	updateUserGroups(input:{userId: $id, groupIds: $groupIds})
	{
		user 
		{
			...localUserFields				
			usersGroups: usersGroupsByUserId
			{
				nodes
				{
					id
					group: groupByGroupId
					{
						...groupFields
					}
				}
			}
		}
	}				
}

#-------------------------------------------------------------------------------
query CurrentUserId
{
	currentUserId
}

#-------------------------------------------------------------------------------
query CurrentUsername
{
	currentUsername
}

#-------------------------------------------------------------------------------
query CurrentReadPermissions
{
	currentReadPermissions
	{
		nodes
		{
			id
			name
		}
	}
}

#-------------------------------------------------------------------------------
query CurrentWritePermissions
{
	currentWritePermissions
	{
		nodes
		{
			id
			name
		}
	}
}

#-------------------------------------------------------------------------------
mutation Authenticate($username: String!, $password: String!) 
{
	authenticate(input: {username: $username, password: $password}) 
	{
		jwtToken	 
	}
}

#-------------------------------------------------------------------------------
query allUsersNoPagination
    {
    allUsers {
        nodes {
            id,
            username,
            created,
            modified,
            fullname
            initials,
            groupByGroupId {
                name
                id
            }
        }       
    }
}

#-------------------------------------------------------------------------------
query allusers(
    $first: Int, $offset: Int, $filter: UserFilter!, $orderBy: [UsersOrderBy!]
)
    {
    allUsers(
    filter: $filter
    orderBy: $orderBy
    first: $first
    offset: $offset
    ) {
        totalCount
        nodes {
            id,
            username,
            created,
            fullname
            modified,
            initials,
            usersGroupsByUserId {
                nodes {
                    id
                    groupByGroupId {
                        id
                        name
                    }
                }
            }
        }        
    }
}

#-------------------------------------------------------------------------------
mutation CreateUser(
    $body: UserInput!
) {
  createUser(
    input: {user: $body}
  ) {
    user {
            id,
            username,
            created,
            fullname
            modified,
            initials,
            groupByGroupId {
                name
                id
            }
        } 
  }
}

#-------------------------------------------------------------------------------
mutation Updateuser(
    $id: Int!, $patch: UserPatch!
) {
  updateUserById(
    input: {
		id: $id
		userPatch: $patch	
    }
  ) {
    user {
            id,
            username,
            created,
            fullname
            modified,
            initials,
            groupByGroupId {
                name
                id
            }
        } 
  }
}

#-------------------------------------------------------------------------------
mutation DeleteUser($id: Int!)
{
	deleteUserById(input:{id: $id})
	{
		clientMutationId
	}  
}

